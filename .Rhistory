getwd()
filepath <- "./activity.csv"
activityRawData <- read.csv(filepath, header = TRUE, sep = ",")
View(activityRawData)
class(activityRawData$date)
class(activityRawData$steps)
class(activityRawData$interval)
activityRawData$date <- as.POSIXct(activityRawData$date, format = "%Y-%m-%d")
class(activityRawData$date)
library(dplyr)
?summarise
test <- activityRawData
t <- group_by(test, date)
k <- summarise(t, sum(steps))
View(k)
stepsByDay <- tapply(test$steps, test$date, sum, na.rm=TRUE)
k1 <- summarise(group_by(activityRawData, date), sum(steps))
?hist
hist(k1$`sum(steps)`)
hist(k1$`sum(steps)`, breaks=20)
StepsByDay <- summarise(group_by(activityRawData, date), sum(steps))
hist(StepsByDay$`sum(steps)`, breaks = 20)
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps taken each day", xlab ="Total steps by day")
meanStepsByDay <- mean(StepsByDay$`sum(steps)`)
meanStepsByDay <- mean(StepsByDay$`sum(steps)`, na.rm = TRUE)
medianStepsByDay <- median(StepsByDay$`sum(steps)`, na.rm = TRUE)
meanStepsByDay <- mean(StepsByDay$`sum(steps)`, na.rm = TRUE)
medianStepsByDay <- median(StepsByDay$`sum(steps)`, na.rm = TRUE)
t <- summarise(group_by(test, interval), mean(steps))
View(t)
View(test)
t <- summarise(group_by(test, interval), mean(steps, na.rm = TRUE))
View(t)
StepsByInterval <- summarise(group_by(activityRawData, interval), mean(steps, na.rm = TRUE))
library(ggplot2)
ggplot(data = StepsByInterval, aes(x = interval, y = steps)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
ggplot(data = StepsByInterval, aes(x = StepsByInterval$interval, y = StepsByInterval$`mean(steps, na.rm = TRUE)`)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
StepsByInterval <- summarise(group_by(activityRawData, interval), average=mean(steps, na.rm = TRUE))
View(StepsByInterval)
StepsByInterval <- summarise(group_by(activityRawData, interval), AverageSteps=mean(steps, na.rm = TRUE))
View(StepsByInterval)
View(StepsByInterval)
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) + geom_line() + xlab("5-minute interval")
+ ylab("average number of steps taken")
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
StepsByInterval <- summarise(group_by(activityRawData, interval), average=mean(steps, na.rm = TRUE))
View(StepsByInterval)
x <-filter(StepsByInterval, average == max(average))
StepsByInterval <- summarise(group_by(activityRawData, interval), AverageSteps=mean(steps, na.rm = TRUE))
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) + geom_line() + xlab("5-minute interval") + ylab("average number of steps taken")
maxInterval <- filter(StepsByInterval, AverageSteps == max(AverageSteps))
maxInterval$interval
maxInterval$AverageSteps
sum(is.na(activityRawData))
quantNA <- sum(is.na(activityRawData))
activityWithoutNA <- activityRawData
for (i in 1:nrow(activityWithoutNA)) {
if (is.na(activityWithoutNA$steps[i])) {
activityWithoutNA$steps[i] <- StepsByInterval[which(activityWithoutNA$interval[i] == StepsByInterval$interval), ]$AverageSteps
}
}
View(activityRawData)
View(activityWithoutNA)
View(StepsByInterval)
quantNA <- sum(is.na(activityWithoutNA))
quantNA <- sum(is.na(activityRawData))
StepsByDay_2 <- summarise(group_by(activityWithoutNA, date), sum(steps))
hist(StepsByDay_2$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
meanStepsByDay_2 <- mean(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
medianStepsByDay_2 <- median(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
diff_mean <- meanStepsByDay_2 - meanStepsByDay
diffMedian <- medianStepsByDay_2 - medianStepsByDay
library(lubridate)
install.packages("lubridate")
activityWithoutNA$dateType <-  ifelse(as.POSIXlt(activityWithoutNA$date)$wday %in% c(0,6), 'weekend', 'weekday')
View(activityWithoutNA)
quantNA <- sum(is.na(activityRawData))
activityWithoutNA <- activityRawData
for (i in 1:nrow(activityWithoutNA)) {
if (is.na(activityWithoutNA$steps[i])) {
activityWithoutNA$steps[i] <- StepsByInterval[which(activityWithoutNA$interval[i] == StepsByInterval$interval), ]$AverageSteps
}
}
StepsByDay_2 <- summarise(group_by(activityWithoutNA, date), sum(steps))
hist(StepsByDay_2$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
meanStepsByDay_2 <- mean(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
medianStepsByDay_2 <- median(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
diff_mean <- meanStepsByDay_2 - meanStepsByDay
diffMedian <- medianStepsByDay_2 - medianStepsByDay
## Task 4
activityWithoutNA$day <-  ifelse(as.POSIXlt(activityWithoutNA$date)$wday %in% c(0,6), 'weekend', 'weekday')
View(activityWithoutNA)
table(activityWithoutNA$day)
ggplot(activityWithoutNA, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Average number of steps")
StepsByInterval_Days <- aggregate(steps ~ interval + day, data = filled.data, mean)
StepsByInterval_Days <- aggregate(steps ~ interval + day, data = activityWithoutNA, mean)
View(StepsByInterval_Days)
ggplot(StepsByInterval_Days, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Average number of steps")
library(dplyr)
library(ggplot2)
library(lubridate)
## Loading raw dataset
filepath <- "./activity.csv"
activityRawData <- read.csv(filepath, header = TRUE, sep = ",")
## Convert format of the column "date"
activityRawData$date <- as.POSIXct(activityRawData$date, format = "%Y-%m-%d")
## Task 1
StepsByDay <- summarise(group_by(activityRawData, date), sum(steps))
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
meanStepsByDay <- mean(StepsByDay$`sum(steps)`, na.rm = TRUE)
medianStepsByDay <- median(StepsByDay$`sum(steps)`, na.rm = TRUE)
## Task 2
StepsByInterval <- summarise(group_by(activityRawData, interval), AverageSteps=mean(steps, na.rm = TRUE))
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) +
+ geom_line() +
+ xlab("5-minute interval") +
+ ylab("Average number of steps taken")
maxInterval <- filter(StepsByInterval, AverageSteps == max(AverageSteps))
## Task 3
quantNA <- sum(is.na(activityRawData))
activityWithoutNA <- activityRawData
for (i in 1:nrow(activityWithoutNA)) {
if (is.na(activityWithoutNA$steps[i])) {
activityWithoutNA$steps[i] <- StepsByInterval[which(activityWithoutNA$interval[i] == StepsByInterval$interval), ]$AverageSteps
}
}
StepsByDay_2 <- summarise(group_by(activityWithoutNA, date), sum(steps))
hist(StepsByDay_2$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
meanStepsByDay_2 <- mean(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
medianStepsByDay_2 <- median(StepsByDay_2$`sum(steps)`, na.rm = TRUE)
diff_mean <- meanStepsByDay_2 - meanStepsByDay
diffMedian <- medianStepsByDay_2 - medianStepsByDay
## Task 4
activityWithoutNA$day <-  ifelse(as.POSIXlt(activityWithoutNA$date)$wday %in% c(0,6), 'weekend', 'weekday')
table(activityWithoutNA$day)
StepsByInterval_Days <- aggregate(steps ~ interval + day, data = activityWithoutNA, mean)
ggplot(StepsByInterval_Days, aes(interval, steps)) +
+     geom_line() +
+     facet_grid(day ~ .) +
+     xlab("5-minute interval") +
+     ylab("Average number of steps taken")
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) +
+ geom_line() +
+ xlab("5-minute interval") +
+ ylab("Average number of steps taken")
StepsByInterval <- summarise(group_by(activityRawData, interval), AverageSteps=mean(steps, na.rm = TRUE))
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) +
+ + geom_line() +
+ + xlab("5-minute interval") +
+ + ylab("Average number of steps taken")
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) + geom_line() + xlab("5-minute interval") + ylab("Average number of steps taken")
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) +
+ geom_line() +
+ xlab("5-minute interval") +
+ ylab("Average number of steps taken")
ggplot(data = StepsByInterval, aes(x = interval, y = AverageSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("Average number of steps taken")
ggplot(StepsByInterval_Days, aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Average number of steps taken")
install.packages("knitr")
library(knitr)
source('~/.active-rstudio-document', echo=TRUE)
```r
library(dplyr)
library(ggplot2)
library(lubridate)
echo = TRUE  # Always make code visible
```
## Loading and preprocessing the data
```r
# Loading the data
filepath <- "./activity.csv"
activityRawData <- read.csv(filepath, header = TRUE, sep = ",")
#Convert format of the column "date"
activityRawData$date <- as.POSIXct(activityRawData$date, format = "%Y-%m-%d")
```
## What is mean total number of steps taken per day?
```r
StepsByDay <- summarise(group_by(activityRawData, date), sum(steps))
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
```
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
library(dplyr)
library(ggplot2)
library(lubridate)
echo = TRUE  # Always make code visible
# Loading the data
filepath <- "./activity.csv"
activityRawData <- read.csv(filepath, header = TRUE, sep = ",")
#Convert format of the column "date"
activityRawData$date <- as.POSIXct(activityRawData$date, format = "%Y-%m-%d")
StepsByDay <- summarise(group_by(activityRawData, date), sum(steps))
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
# Loading the data
filepath <- "./activity.csv"
activityRawData <- read.csv(filepath, header = TRUE, sep = ",")
#Convert format of the column "date"
activityRawData$date <- as.POSIXct(activityRawData$date, format = "%Y-%m-%d")
StepsByDay <- summarise(group_by(activityRawData, date), sum(steps))
hist(StepsByDay$`sum(steps)`, breaks = 20, main = "Histogram of the total number of steps by day", xlab ="Total steps by day")
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
package_version(knitr)
library(knitr)
install.packages("dplyr")
