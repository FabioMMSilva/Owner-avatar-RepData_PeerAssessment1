hist(means)
data(faithful)
head(faithful)
?faithful
hist(faithful$waiting)
hist(faithful$waiting,probability=TRUE)
lines(density(faithful$waiting))
tosses <- scan(what="character")
table(tosses)
ptos <- table(tosses)/length(tosses)
ptos
plot(ptos)
barplot(ptos)
y<-c(1,4,3,5,4,2,4)
posrol<-c(1,2,3,4,5,6)
labels.rolls = c("one", "two", "three", "four", "five", "six")
fy <- factor(y,levels=posrol,labels=labels.rolls)
fy
table(fy)
table(y)
k<-0:12
p<-dbinom(k,size=12,prob=1/3)
p
Binom<-round(26306*p)
names(Binom)<-k
Binom
Weldon = c(185, 1149, 3265, 5475, 6114, 5194, 3067,
+
1331, 403, 105, 14, 4, 0)
names(Weldon)<-k
Weldon
data.frame(Binom, Weldon, Diff=Weldon - Binom)
counts<-cbind(Binom, Weldon)
counts
varplot(counts,beside=TRUE)
barplot(counts,beside=TRUE)
barplot(counts)
plot(k, Binom)
plot(k, Binom,type="h")
plot(k, Binom,type="h",lwd=2)
plot(k, Binom,type="h",lwd=2,lty=1)
plot(k, Binom,type="h",lwd=2,lty=1)
lines(k + .2,Weldon,type="h",lwd=2,lty=2)
?barplot
barplot(counts,beside=TRUE,inside=TRUE)
twn = read.table("twins.dat.txt", header=TRUE,
sep=",", na.strings=".")
twn
View(twn)
table(twn$EDUCL)
table(twn$EDUCH)
c.EDUCL <- cut(twn$EDUCL, breaks=c(0,12,5,16,24),labels=c("High School","Some College","College Degree","Graduate School"))
c.EDUCH = cut(twn$EDUCH, breaks=c(0, 12, 15, 16, 24),
labels=c("High School", "Some College", "College Degree",
"Graduate School"))
c.EDUCH
mode
mode(c.EDUCH)
table(c.EDUCL)
prop.table(table(c.EDUCL))
c.EDUCL
c.EDUCH
c.EDUCL = cut(twn$EDUCL, breaks=c(0, 12, 15, 16, 24),
labels=c("High School", "Some College", "College Degree",
"Graduate School"))
c.EDUCH = cut(twn$EDUCH, breaks=c(0, 12, 15, 16, 24),
labels=c("High School", "Some College", "College Degree",
"Graduate School"))
c.EDUCL
table(c.EDUCL)
prop.table(table(c.EDUCL))
prop.table(c.EDUCL)
barplot(prop.table(table(c.EDUCL)))
mosaicplot(table(c.EDUCL))
table(c.EDUCL,c.EDUCH)
table(c.EDUCL,c.EDUCH)
T1<-table(c.EDUCL,c.EDUCH)
diag(T1)
sum(diag(T1))
sum(diag(T1))/sum(T1)
plot(T1)
barplot(T1)
mosaicplot(T1)
plot(T1)
c.wage <- cut(twn$HRWAGEL,c(0,7,13,20,150))
hist(twn$HRWAGEL)
c.wage
table(c.wage)
sum(c.wage)
sum(table(c.wage))
table(c.EDUCL,c.wage)
T2<-prop.table(table(c.EDUCL,c.wage))
?prop.table
T2
T2<-table(c.EDUCL,c.wage)
prop.table(T2,margin=1)
P<-prop.table(T2,margin=1)
barplot(P)
barplot(t(P)
)
barplot(t(P),ylim(0,1.3))
barplot(t(P),ylim=c(0,1.3))
barplot(t(P),ylim=c(0,1.3),ylab="Proportions")
barplot(t(P),ylim=c(0,1.3),ylab="Proportions",legend.text=dimnames(O))
barplot(t(P),ylim=c(0,1.3),ylab="Proportions",legend.text=dimnames(P))
barplot(t(P),ylim=c(0,1.3),ylab="Proportions",legend.text=dimnames(P)$c.wage)
barplot(t(P),ylim=c(0,1.3),ylab="Proportions",legend.text=dimnames(P)$c.wage,args.legend=list(x="top"))
?barplot
?dimnames
dimnames(P)
P
barplot(t(P),ylim=c(0,1.3),ylab="Proportions",legend.text=dimnames(P)$c.wage,args.legend=list(x="top"),beside=TRUE)
barplot(t(P),ylab="Proportions",legend.text=dimnames(P)$c.wage,args.legend=list(x="top"),beside=TRUE)
barplot(t(P),ylab="Proportions",legend.text=dimnames(P)$c.wage,args.legend=list(x="topleft"),beside=TRUE)
?rnorm
qnorm(0.7)
qnorm(0)
pnorm(0)
qnorm(0.5)
qnorm(0.7)
0.4*qnorm(0.7)
pnorm(0.4*qnorm(0.7))
?regression
?glm
source('~/.active-rstudio-document', echo=TRUE)
makeVector(5)
vec <- makeVector(5)
vec <- makeVector(5:8)
vec <- makeVector(1:2)
vec <- makeVector(1:2)
rm(vec)
vec <- makeVector(1:2)
?syntax
?Syntax
?assign
?solve
setwd("~/")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","quiz1.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","quiz1.csv",method="curl")
dat<-read.csv("quiz1.csv")
dat
head(dat)
View(dat)
dat$VAL
dat[dat$VAL==24]
dat[dat$VAL==24,]
dat[dat$VAL==24,]$VAL
dat[dat$VAL==24,]
dat$VAL==24,
dat$VAL==24
table(dat)
table(dat$VAL)
table(dat$VAL)[24]
source('~/quiz1.R', echo=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","quiz1.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","quiz1.xlsx",method="curl")
dat<-read.xlsx("quiz1.xlsx",sheetIndex=0,rowIndex=18:23,colIndex=7:15)
library(xlsx)
dat<-read.xlsx("quiz1.xlsx",sheetIndex=0,rowIndex=18:23,colIndex=7:15)
dat<-read.xlsx("quiz1.xlsx",sheetIndex=1,rowIndex=18:23,colIndex=7:15)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
library(XML)
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile="xml.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile="xml.xml",method="curl")
fileURL<="./xml.xml"
fileURL<-"./xml.xml"
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
doc
rootNode<-xmlRoot(doc)
xmlName(rootNode)
xpathSApply(rootNode,"//zipcode",xmlValue)
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
table(zips)
?xmlTreeParse
library(data.table)
?fread
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="DT.csv",method="curl")
DT <- fread("DT.csv")
View(DT)
system.time(1+2)
system.time(1:10000)
system.time(1:100000)
system.time(sum(1:100000)
)
system.time(sum(1:10000))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]) + system.time(rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX)))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
vars <- rnorm(10000)
sample
?sample
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mean(vars)
mean(sam_avg)
sd(vars)
sd(sam_avg)
?rnorm
source('~/.active-rstudio-document', echo=TRUE)
mean(vars)
sd(vars)
mean(sam_avg)
sd(sam_avg)
source('~/.active-rstudio-document', echo=TRUE)
sd(vars)
mean(sam_avg)
mean(sam_avg)
sd(sam_avg)
mean(vars)
5/sqrt(100)
5/sqrt(1000)
5/sqrt(10000)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mean(pop)
sd(pop)
mean(sam.means)
sd(sam.means)
5/sqrt(100)
5/sqrt(1000)
5/sqrt(100000)
5/sqrt(10000)
source('~/.active-rstudio-document', echo=TRUE)
2/sqrt(1000)
p <- c(.1, .2, .3, .4)
x <- 2 : 5
y<-p*x^2
sum(y)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(x*p)
sum(x*p)
mean
str
lapply
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
library(dbConnect)
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?oauth_endpoints
?oauth_app
?oauth2.0_token
?config
?stop_for_status
?content
source('~/Documents/githubapi.R', echo=TRUE)
library(jsonlite)
?jsonlite
??jsonlite
?fromJSON
fromj <- fromJSON(req)
req
fromj <- fromJSON(content(req))
fromj <- toJSON(fromJSON(content(req)))
fromj <- fromJSON(toJSON(content(req)))
fromj
View(fromj)
fromj <- fromJSON(toJSON((req))
)
fromj <- fromJSON(toJSON(req)
)
fromj <- fromJSON(toJSON(content(req)))
fromj
str(fromj)
fromj[fromj$name=='datasharing']
repo <- fromj[fromj$name=='datasharing']
repo
View(repo)
repo <- fromj$created_at[fromj$name=='datasharing']
repo
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","sqldf.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","sqldf.csv",method="curl")
acs <- read.csv("sqldf.csv")
str(cas)
str(acs)
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
an1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP
an2 <- sqldf("select pwgtp1 from acs")
an3 <- sqldf("select * from acs where AGEP < 50")
an4 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")
?unique
ans <- unique(acs$AGEP)
ans
ans1 <- sqldf("select distinct AGEP from acs")
ans2 <- sqldf("select AGEP where unique from acs")
ans3 <- sqldf("select unique * from acs")
and4 <- sqldf("select unique AGEP from acs")
ans
ans1
?url
file <-url("http://biostat.jhsph.edu/~jleek/contact.html")
lines<-readLines(file)
lines
close(file)
ls
lines
lines[10]
lines[1]
lines[0]
lines[1]
nchar
?nchar
nchar(file[c(10,20,30,100)])
nchar(lines[c(10,20,30,100)])
file2 <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
file2
lines2<-readLines(file2)
?url
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","q5.dat",method="csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","q5.dat",method="curl")
lines2<-readLines("q5.dat")
head(lines2)
lines2
head(lines2)
tablee<-read.table("q5.dat")
read.table
?read.table
tablee<-read.table("q5.dat",sep=" ",skip=3,header=TRUE)
tablee<-read.table("q5.dat",sep=" ",skip=3,header=TRUE,strip.white=TRUE)
tablee<-read.table("q5.dat",sep=" ",skip=4,header=TRUE,strip.white=TRUE)
?apply
?lapply
source('~/.active-rstudio-document', echo=TRUE)
lines2
lines2[1]
lines2[2]
lines2[3]
lines2[4]
lines2[4:]
lines2[-1]
lines2[-4]
sub<-lines2[-4]
head(sub)
sub<-lines2[-c(1:4)]
head(sub)
sub[1]
sub[1][1]
type(sub[1])
attr(sub[1])
attributes(sub[1])
attributes(sub)
attr(sub)
?attr
line<-sub[1]
line
line[5]
line[3]
?substr''
?substr'
?substr
?substr
substr(line,1,3)
head(lines)
head(lines2)
substr(line,10,15)
substr(line,25,30)
line
substr(line,35,40)
substr(line,41,45)
substr(line,41,44)
substr(line,41,45)
substr(line,42,45)
as.numeric(substr(line,41,45))
?apply
apply(sub,1,sum)
dim(sub)
?substr
source('~/finalq5.R', echo=TRUE)
source('~/finalq5.R', echo=TRUE)
source('~/finalq5.R', echo=TRUE)
head(lines2)
substr(line,30,35)
line
substr(line,29,34)
substr(line,29,342)
substr(line,29,32)
source('~/finalq5.R', echo=TRUE)
?sample
sample(1)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
?xtabs
?Freq
?freq
data(UCBAdmissions)
UCBAdmissions
DF <- as.data.frame(UCBAdmissions)
DF
View(DF)
table(DF)
xtabs(Dept ~ Gender)
xtabs(Dept ~ Gender,data=DF)
xtabs(Freq ~ Gender,data=DF)
xtabs(Freq ~ Dept,data=DF)
xtabs(Freq ~ Dept + Gender,data=DF)
xtabs(Freq ~ Dept + Gender + Admit,data=DF)
UCBAdmissions
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
?index
amzn
head(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(lubridate)
sampleTimes
class(sampleTimes)
wday()
wday(sampleTimes)
sampleTimes[1]
?year
year(sampleTimes)
year(sampleTimes)==2012
sample12<-sample12[year(sampleTimes)==2012]
sample12<-sampleTimes[year(sampleTimes)==2012]
sample12
len(sample12)
lengt(sample12)
length(sample12)
wday(sample12)
wday(sample12,label = TRUE)
table(wday(sample12,label = TRUE))
library(datasets)
library(lattice)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
factor
month.name
month.name(5:9)
month.name
month.name[5:9]
?factor
airquality <- transform(airquality, Month = factor(Month,labels=month.name[5:9]))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
?font
?download.file
source('~/RR-PA1/code.R', echo=TRUE)
source('~/RR-PA1/code.R', echo=TRUE)
View(dat.file)
hist(dat.file)
?hist
?lattice
library(lattice)
?lattice
example(histogram)
?tapply
?aggregate
aggregate(dat.file)
aggregate(dat.file,by=dat.file$date)
aggregate(dat.file,by=dat.file$date,FUN=sum)
summary(dat.file)
summary(dat.file$date)
class(summary(dat.file$date))
list(summary(dat.file$date))
?list
as.list(summary(dat.file$date))
as.pairlist(summary(dat.file$date))
table(dat.file)
table(dat.file$date)
duplicated(dat.file$date)
dat.file$date[!duplicated(dat.file$date)]
levels(dat.file$date)
as.list(levels(dat.file$date))
source('~/RepData_PeerAssessment1/code.R', echo=TRUE)
?aggregate
aggregate(dat.file,dates,sum)
aggregate(dat.file$steps,dates,sum)
aggregate(dat.file$steps,by=dates,FUN=sum)
aggregate(steps ~ date,data=dat.file)
aggregate(steps ~ date,data=dat.file),FUN=sum
aggregate(steps ~ date,data=dat.file,FUN=sum)
hist(aggregate(steps ~ date,data=dat.file,FUN=sum))
aggregate(steps ~ date,data=dat.file,FUN=sum)
