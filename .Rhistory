i <- 1:6
{if(is.na(test$steps[i])) test$o[i] <- F}
for(i in 1:nrow(test){if(is.na(test$steps[i])) test$o[i] <- F}
for(i in 1:nrow(test)){if(is.na(test$steps[i])) test$o[i] <- F}
test
head(data_copy)
data_copy <- data_raw
data_copy$original <- F
for(i in 1:nrow(data_copy))
{
if(!is.na(data_copy$steps[i])) data_copy$original[i] <- T
}
head(data_copy)
table(data_copy$original)
head(interval_mean)
interval_mean[which(names(interval_mean))==0]
interval_mean[which(names(interval_mean==0)),]
interval_mean[which(names(interval_mean==0))]
head(names(interval_mean))
seq(0,2355,5)
int_data <- cbind(seq(0,2355,5), interval_mean)
length(seq(0,2355,5))
head(interval_data)
head(interval_mean)
interval_mean[names(interval_mean == 0)]
[names(interval_mean == 0)]
names(interval_mean == 0)
names(interval_mean[interval_mean == 0])
interval_mean[names(interval_mean == 0)])
interval_mean[names(interval_mean == 0)]
interval_mean[names(interval_mean == 0),]
median(data_copy$steps[which(data_copy$interval == 835)])
median(data_copy$steps[which(data_copy$interval == 835)], rm.na=T)
median(data_copy$steps[which(data_copy$interval == 835)], na.rm=T)
sum(data_copy$steps[which(data_copy$interval == 835)], na.rm=T)
mean(data_copy$steps[which(data_copy$interval == 835)], na.rm=T)
rm(int_data)
rm(test)
rm(i)
data_copy <- data_raw
data_copy$original <- T
for(i in 1:nrow(data_copy))
{
if(is.na(data_copy$steps[i]))
data_copy$original[i] <- F
data_copy$steps <- mean(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T)
}
head(interval_copy)
head(data_copy)
data_copy <- data_raw
data_copy$original <- T
for(i in 1:nrow(data_copy))
{
if(is.na(data_copy$steps[i]))
data_copy$original[i] <- F
data_copy$steps <- floor(mean(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T))
}
head(data_copy)
interval_mean <- tapply(data$steps, data$interval, mean)
interval_median <- tapply(data$steps, data$interval, median)
plot(tapply(data$steps, data$interval, median), type="l",
xlab="Time intervals", ylab= "total steps", main= "Median steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
```{r, eval=T}
plot(tapply(data$steps, data$interval, mean), type="l",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, median), type="l",
xlab="Time intervals", ylab= "total steps", main= "Median steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
```{r, eval=T}
plot(tapply(data$steps, data$interval, mean), type="l",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, mean), type="l",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l",
xlab="Time intervals", ylab= "total steps", main= "Median steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, mean), type="l",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue")
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue")
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue", add=T)
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)))
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)))
data$steps[which(data$interval==835)]
test <- data$steps[which(data$interval==835)]
mean(test)
median(test)
sort(test)
sum(test)
sum(test)/length(test)
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)))
abline(h=mean(data$steps), col="red")
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)))
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)))
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2)
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
median(data$steps)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axis=F)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F, labels=F)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F)
axis(1, F)
axis(2, F)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F)
axis(1, labels=F)
axis(2, labels=F)
mean(data$steps)   # 37.4 steps per interval
median(data$steps) # 0 steps per interval
max(interval_mean) # 206.2 steps per interval
interval_mean[which(interval_mean == max(interval_mean))] # 835
```{r, eval=T}
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F)
axis(1, labels=F)
axis(2, labels=F)
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F,
xlab="Time intervals", ylab= "total steps", main= "Mean steps per interval"))
```{r, eval=T}
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F,
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval"))
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2)
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps", "2hrs interval", "noon"), lty = c(1,2,2),
col=c("red", "grey","black"))
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F,
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval"))
plot(tapply(data$steps, data$interval, mean), type="l", col="red",
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval")
par(new=T)
plot(tapply(data$steps, data$interval, median), type="l", col="blue",
ylim=range(0:max(interval_mean)), axes=F,
xlab="Time intervals", ylab="total steps", main="Mean and median steps per interval")
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2)
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2)
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps (interval)", "Mean steps (all)",
"Median steps (interval)", "Median steps (all)",
"2hrs interval", "noon"), lty = c(1,2,1,2,2,2),
col=c("red", "red", "blue", "blue" "grey","black"))
abline(h=mean(data$steps), col="red", lty=2)
abline(h=median(data$steps), col="blue", lty=2)
abline(v=seq(0,288, by= 24), lty=2, col="grey")
abline(v=144, lty=2, col="black")
legend(200,200, c("Mean steps (interval)", "Mean steps (all)",
"Median steps (interval)", "Median steps (all)",
"2hrs interval", "noon"), lty = c(1,2,1,2,2,2),
col=c("red", "red", "blue", "blue", "grey","black"))
seq(0,288, by= 24)
interval_median[which(interval_median == max(interval_median))] # 835
nrow(data[which(data$steps==0),])
nrow(data[which(data$steps==0),]) / nrow(data)
max(interval_median)
data_copy <- data_raw
data_copy$original <- T
data_copy$stepsFromMean <- data_copy$steps
data_copy$stepsFromMedian <- data_copy$steps
for(i in 1:nrow(data_copy))
{
if(is.na(data_copy$steps[i]))
data_copy$original[i] <- F
data_copy$stepsFromMean <- floor(mean(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T))
data_copy$stepsFromMedian <- median(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T)
}
head(data_copy)
hist(steps_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
legend(1,6, "Mean", lty = 1, col="red")
steps1_sum <- tapply(data_copy$stepsFromMean, data$date, sum)
steps1_mean <- mean(data_copy$stepsFromMean, na.rm=T)          # 10766
steps1_median <- median(data_copy$stepsFromMean, na.rm=T)      # 10765
steps1_sum <- tapply(data_copy$stepsFromMean, data_copy$date, sum)
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(1,6, "Mean", lty = 1, col="red")
hist(steps_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
legend(1,6, "Mean", lty = 1, col="red")
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(1,6, "Mean", lty = 1, col="red")
steps1_sum <- tapply(data_copy$stepsFromMean, data_copy$date, sum)
steps1_sum
View(data_copy)
data_copy <- data_raw
data_copy$original <- T
data_copy$stepsFromMean <- data_copy$steps
data_copy$stepsFromMedian <- data_copy$steps
for(i in 1:nrow(data_copy))
{
if(is.na(data_copy$steps[i]))
{
data_copy$original[i] <- F
data_copy$stepsFromMean <- floor(mean(data_copy$steps[which(data_copy$interval ==   data_copy$interval[i])], na.rm=T))
data_copy$stepsFromMedian <- median(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T)
}
}
View(data_copy)
data_copy <- data_raw
data_copy$original <- T
data_copy$stepsFromMean <- data_copy$steps
data_copy$stepsFromMedian <- data_copy$steps
for(i in 1:nrow(data_copy))
{
if(is.na(data_copy$steps[i]))
{
data_copy$original[i] <- F
data_copy$stepsFromMean[i] <- floor(mean(data_copy$steps[which(data_copy$interval ==   data_copy$interval[i])], na.rm=T))
data_copy$stepsFromMedian[i] <- median(data_copy$steps[which(data_copy$interval == data_copy$interval[i])], na.rm=T)
}
}
View(data_copy)
steps1_sum <- tapply(data_copy$stepsFromMean, data_copy$date, sum)
steps1_mean <- mean(data_copy$stepsFromMean, na.rm=T)          # 10766
steps1_median <- median(data_copy$stepsFromMean, na.rm=T)      # 10765
mean(data_copy$stepsFromMean, na.rm=T)
median(data_copy$stepsFromMean, na.rm=T)
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(1,6, "Mean", lty = 1, col="red")
hist(steps_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
legend(1,6, "Mean", lty = 1, col="red")
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(10,6, "Mean", lty = 1, col="red")
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(10,6, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(100,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
legend(15000,6, "Mean", lty = 1, col="red")
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(15000,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
steps2_sum <- tapply(data_copy$stepsFromMedian, data_copy$date, sum)
steps2_mean <- mean(data_copy$stepsFromMedian, na.rm=T)          # 37.33
steps2_median <- median(data_copy$stepsFromMedian, na.rm=T)      # 0
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(15000,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps2_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps2_mean, col="red")
abline(v=steps2_median, col="blue")
legend(15000,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE),
hist(steps_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
legend(15000,6, "Mean", lty = 1, col="red")
hist(steps1_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps1_mean, col="red")
abline(v=steps1_median, col="blue")
legend(15000,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps2_sum, breaks=60,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps2_mean, col="red")
abline(v=steps2_median, col="blue")
legend(15000,8, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps_sum, breaks=60, ylim=0:8,
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
abline(v=steps_median, col="blue")
legend(15000,7, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
hist(steps_sum, breaks=60, ylim=c(0,8),
xlab="Steps per day",
main="Histogram of recorded steps per day \n(Oct & Nov, 2012)")
abline(v=steps_mean, col="red")
abline(v=steps_median, col="blue")
legend(15000,7, c("Mean", "Median"), lty = c(1,1), col=c("red", "blue"))
steps1_sum
mean(steps1_sum, na.rm=T)
median(steps1_sum, na.rm=T)
median(steps_sum, na.rm=T)
mean(steps_sum, na.rm=T)
mean(steps2_sum, na.rm=T)
median(steps2_sum, na.rm=T)
rm(i)
rm(interval_mean,interval_median)
rm(stps_mean, steps_median, steps_sum)
rm(steps_mean, steps_median, steps_sum)
rm(steps1_mean, steps1_median, steps1_sum)
rm(steps2_mean, steps2_median, steps2_sum)
rm(test)
test <- sample(data$date, 100, T)
test
weekdays(test)
test <- as.Date(test)
weekdays(test)
data_copy$Weekdays <- weekdays(as.Date(data_copy$date))
?weekdays
data_copy$Weekdays <- weekdays(as.Date(data_copy$date), abbrevate=T)
data_copy$Weekdays <- weekdays(as.Date(data_copy$date), abbreviate=T)
library(ggplot2)
data_copy$Weekdays <- weekdays(as.Date(data_copy$date), abbreviate=T)
data_copy$Weekend <- F
for(i in 1:nrow(data_copy))
{
if(data_copy$Weekdays[i] == "Sa" | data_copy$Weekdays[i] == "So")
data_copy$Weekend[i] <- T
}
qplot(data_copy, aes(x=steps))
qplot(data_copy, aes(x=stepsFromMean))
ggplot(data=data_copy, aes(x=stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=stepsFromMean)) + geom_barplot(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=stepsFromMean)) + geom_bar(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval,stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval),stepsFromMean) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval),stepsFromMean) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=stepsFromMean) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=mean(stepsFromMean))) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=stepsFromMean))
geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=interval, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
data_copy$IntervalNr <- seq(0,288,5)
data_copy$IntervalNr <- rep(seq(0,287,5),61)
17568/3538
17568/61
data_copy$IntervalNr <- rep(seq(0,287,1),61)
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend)) + facet_grid()
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend)) + facet_grid()
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_density(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
library(ggplot2)
data_copy$Weekdays <- weekdays(as.Date(data_copy$date), abbreviate=T)
data_copy$Weekend <- F
data_copy$IntervalNr <- rep(seq(0,287,1),61)
for(i in 1:nrow(data_copy))
{
if(data_copy$Weekdays[i] == "Sa" | data_copy$Weekdays[i] == "So")
data_copy$Weekend[i] <- T
}
ggplot(data=data_copy, aes(x=IntervalNr, y=stepsFromMean)) + geom_line(aes(group=Weekend, colour=Weekend))
sum(data_copy$stepsFromMean[which(data_copy_Weekdays == T),])
sum(data_copy$stepsFromMean[which(data_copy$Weekdays == T),])
sum(data_copy$stepsFromMean[which(data_copy$Weekdays == T)])
sum(data_copy$stepsFromMean[which(data_copy$Weekdays == T),])
sum(data_copy$stepsFromMean[which(data_copy$Weekend == T),])
sum(data_copy$stepsFromMean[which(data_copy$Weekend == T)])
unique(data_copy$date)
unique(data_copy$date[which(data_copy$weekend==T)])
unique(data_copy$date[which(data_copy$Weekend==T)])
length(unique(data_copy$date[which(data_copy$Weekend==T)]))
sum(data_copy$stepsFromMean[which(data_copy$Weekend == T)]) / length(unique(data_copy$date[which(data_copy$Weekend==T)]))
sum(data_copy$stepsFromMean[which(data_copy$Weekend == F)]) / length(unique(data_copy$date[which(data_copy$Weekend==F)])) # steps weekend day
