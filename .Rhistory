d<-aggregate(Emissions~year,FUN="sum",data=all)
#How have emissions from motor vehicle sources changed from 1999–2008
#in Baltimore City? EI.Sector
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
baltimore <- NEI[NEI$fips=="24510", ]
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(baltimore,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#How have emissions from motor vehicle sources changed from 1999–2008
#in Baltimore City? EI.Sector
d <- aggregate(Emissions~year,FUN="sum",data=all)
png("exploratory/project/plot5.png", width=480, height=480, units="px")
barplot(
height=d$Emissions,
names.arg=d$year,
xlab = "Year",
ylab="PM2.5 Emissions (tones)",
main="Total of PM2.5 Emissions in Baltimore City \n (from motor vehicle sources only), 1999-2008"
)
dev.off()
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
baltimore <- NEI[NEI$fips=="24510", ]
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(baltimore,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#How have emissions from motor vehicle sources changed from 1999–2008
#in Baltimore City? EI.Sector
d <- aggregate(Emissions~year,FUN="sum",data=all)
png("exploratory/project/plot5.png", width=480, height=480, units="px")
barplot(
height=d$Emissions,
names.arg=d$year,
xlab = "Year",
ylab="PM2.5 Emissions (tones)",
main="Total of PM2.5 Emissions in Baltimore City \n (from motor vehicle sources only), 1999-2008"
)
dev.off()
balt_la <- NEI[NEI$fips=="24510" | NEI$fips=="06037", ]
balt_la$fips <- factor(balt_la$fips,levels=c("24510","06037"),labels=c("Baltimore City","Los Angeles County"))
levels(balt_la$fips)
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
balt_la <- NEI[NEI$fips=="24510" | NEI$fips=="06037", ]
balt_la$fips <- factor(balt_la$fips,levels=c("24510","06037"),labels=c("Baltimore City","Los Angeles County"))
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(balt_la,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#Compare emissions from motor vehicle sources in Baltimore City with emissions
#from motor vehicle sources in Los Angeles County, California (fips == "06037").
#Which city has seen greater changes over time in motor vehicle emissions?
d<-aggregate(Emissions~(year*fips),FUN="sum",data=all)
library(ggplot2)
png("exploratory/project/plot6.png", width=480, height=480, units="px")
g<- ggplot(d, aes(year,Emissions))
g <- g+geom_line(aes(color=fips))+geom_point(aes(color=fips))
g <- g+ggtitle("Total of PM2.5 Emissions in Baltimore and Los Angeles \n (from motor vehicle sources only), 1999-2008")
g <- g+xlab("Year")
g <- g+ylab("PM2.5 Emissions (tones)")
g
dev.off()
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
balt_la <- NEI[NEI$fips=="24510" | NEI$fips=="06037", ]
balt_la$fips <- factor(balt_la$fips,levels=c("24510","06037"),labels=c("Baltimore City","Los Angeles County"))
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(balt_la,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#Compare emissions from motor vehicle sources in Baltimore City with emissions
#from motor vehicle sources in Los Angeles County, California (fips == "06037").
#Which city has seen greater changes over time in motor vehicle emissions?
d<-aggregate(Emissions~(year*fips),FUN="sum",data=all)
library(ggplot2)
png("exploratory/project/plot6.png", width=480, height=480, units="px")
g<- ggplot(d, aes(year,Emissions))
g <- g+geom_line(aes(color=fips))+geom_point(aes(color=fips))
g <- g+ggtitle("Total of PM2.5 Emissions in Baltimore and Los Angeles \n (from motor vehicle sources only), 1999-2008")
g <- g+xlab("Year")
g <- g+ylab("PM2.5 Emissions (tones)")
g
dev.off()
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
balt_la <- NEI[NEI$fips=="24510" | NEI$fips=="06037", ]
balt_la$fips <- factor(balt_la$fips,levels=c("24510","06037"),labels=c("Baltimore City","Los Angeles County"))
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(balt_la,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#Compare emissions from motor vehicle sources in Baltimore City with emissions
#from motor vehicle sources in Los Angeles County, California (fips == "06037").
#Which city has seen greater changes over time in motor vehicle emissions?
d<-aggregate(Emissions~(year*fips),FUN="sum",data=all)
library(ggplot2)
png("exploratory/project/plot6.png", width=480, height=480, units="px")
g<- ggplot(d, aes(year,Emissions))
g <- g+geom_line(aes(color=fips))+geom_point(aes(color=fips))
g <- g+ggtitle("Total of PM2.5 Emissions in Baltimore and Los Angeles \n (from motor vehicle sources only), 1999-2008")
g <- g+xlab("Year")
g <- g+ylab("PM2.5 Emissions (tones)")
g <- labs(color="Place")
g
dev.off()
#Load data from files
if (!exists("NEI")){
NEI <- readRDS("exploratory/project/summarySCC_PM25.rds")
}
if (!exists("SCC")){
SCC <- readRDS("exploratory/project/Source_Classification_Code.rds")
}
#Select and merge relevant data
balt_la <- NEI[NEI$fips=="24510" | NEI$fips=="06037", ]
balt_la$fips <- factor(balt_la$fips,levels=c("24510","06037"),labels=c("Baltimore City","Los Angeles County"))
filter <- grep("vehicle",SCC$SCC.Level.Two,ignore.case = T,value = T)
vehicles <- SCC[SCC$SCC.Level.Two %in% filter, c("SCC","SCC.Level.Two")]
all<- merge(balt_la,vehicles,by="SCC")
#Quick check
print("Dimension of the merged dataset:")
print(dim(all))
#Compare emissions from motor vehicle sources in Baltimore City with emissions
#from motor vehicle sources in Los Angeles County, California (fips == "06037").
#Which city has seen greater changes over time in motor vehicle emissions?
d<-aggregate(Emissions~(year*fips),FUN="sum",data=all)
library(ggplot2)
png("exploratory/project/plot6.png", width=480, height=480, units="px")
g<- ggplot(d, aes(year,Emissions))
g <- g+geom_line(aes(color=fips))+geom_point(aes(color=fips))
g <- g+ggtitle("Total of PM2.5 Emissions in Baltimore and Los Angeles \n (from motor vehicle sources only), 1999-2008")
g <- g+xlab("Year")
g <- g+ylab("PM2.5 Emissions (tones)")
g <- g+labs(color="Place")
g
dev.off()
activity <- read.csv("repData/activity.csv",sep=",")
head(activity)
str(activity)
if (!exists("activity")){
activity <- read.csv("repData/activity.csv",sep=",")
}
activity$date <- strptime(activity$date, format="%Y-%m-%d")
head(activity)
class(activity$date)
## Loading and preprocessing the data
if (!exists("activity")){
activity <- read.csv("repData/activity.csv",sep=",")
}
activity$date <- strptime(activity$date, format="%Y-%m-%d")
##
agg_data <- aggregate(steps~date,FUN="sum",data=activity)
## Loading and preprocessing the data
if (!exists("activity")){
activity <- read.csv("repData/activity.csv",sep=",")
}
#activity$date <- strptime(activity$date, format="%Y-%m-%d")
##
agg_data <- aggregate(steps~date,FUN="sum",data=activity)
## Loading and preprocessing the data
if (!exists("activity")){
activity <- read.csv("repData/activity.csv",sep=",")
}
##activity$date <- strptime(activity$date, format="%Y-%m-%d")
agg_data <- aggregate(steps~date, FUN="sum",data=activity)
class(acitivity$data)
class(acitivity$date)
class(activity$date)
activity <- read.csv("repData/activity.csv",sep=",")
agg_data <- aggregate(steps~date, FUN="sum",data=activity)
head(agg_data)
activity <- read.csv("repData/activity.csv",sep=",")
aggdata <- aggregate(steps~as.character(date), FUN="sum",data=md)
if (!exists("md")){
## Loading and preprocessing the data
if (!exists("md")){
md <- read.csv("repData/activity.csv",sep=",")
}
md$date <- strptime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~as.character(date), FUN="sum",data=md)
t <- toChar
head(aggdata)
head(aggdata)
## Loading and preprocessing the data
if (!exists("md")){
md <- read.csv("repData/activity.csv",sep=",")
}
md$date <- strptime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~as.character(date), FUN="sum",data=md)
## Loading and preprocessing the data
if (!exists("md")){
md <- read.csv("repData/activity.csv",sep=",")
}
md$date <- strptime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~as.character(date), FUN=sum,data=md)
## Loading and preprocessing the data
if (!exists("md")){
md <- read.csv("repData/activity.csv",sep=",")
}
md$date <- strptime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~as.character(date), FUN=sum,data=md)
head(aggdata)
aggdata <- aggregate(steps~date, FUN=sum,data=md)
class(md$data)
class(md$date)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~date, md, FUN=sum)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
head(aggdata)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
hist(aggdata)
hist(aggdata$steps)
hist()
str(aggdata)
summary(md$steps)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
hist(aggdata$steps)
summary(md$steps)
mean(md$steps,na.rm=T)
median(md$steps,na.rm=T)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
hist(aggdata$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
head(md)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
hist(aggdata$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
aggdata2 <- aggregate(steps~interval, md, FUN=mean)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
aggdata <- aggregate(steps~chardate, md, FUN=sum)
hist(aggdata$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
aggdata2 <- aggregate(steps~interval, md, FUN=mean)
head(aggdata2)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
dateagg <- aggregate(steps~chardate, md, FUN=sum)
hist(dateagg$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
intagg <- aggregate(steps~interval, md, FUN=mean)
plot(intagg$interval,intagg$steps, type="l", ylab="Global Active Power (kilowatts)", xlab="")
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$chardate <- strftime(md$date, format="%Y-%m-%d")
dateagg <- aggregate(steps~chardate, md, FUN=sum)
hist(dateagg$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
intagg <- aggregate(steps~interval, md, FUN=mean)
plot(intagg$interval,intagg$steps, type="l", ylab="Averaged number of steps", xlab="5-minutes interval")
complete.cases(md)
md <- read.csv("activity.csv",sep=",")
hist(dateagg$steps,main="Total number of steps taken each day",xlab="",ylab="")
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$rawdate <- strftime(md$date, format="%Y-%m-%d")
dateagg <- aggregate(steps~rawdate, md, FUN=sum)
hist(dateagg$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
intagg <- aggregate(steps~interval, md, FUN=mean)
plot(intagg$interval,intagg$steps, type="l", ylab="Averaged number of steps", xlab="5-minutes interval")
head(intagg)
intagg[intagg$steps==max(intagg$steps),intagg$interval]
intagg[intagg$steps==max(intagg$steps),]
intagg[intagg$steps==max(intagg$steps),interval]
intagg[intagg$steps==max(intagg$steps),1]
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$rawdate <- strftime(md$date, format="%Y-%m-%d")
dateagg <- aggregate(steps~rawdate, md, FUN=sum)
hist(dateagg$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
intagg <- aggregate(steps~interval, md, FUN=mean)
plot(intagg$interval,intagg$steps, type="l", ylab="Averaged number of steps", xlab="5-minutes interval")
names(intagg)[names(intagg)=="steps"]<- "averageByInterval"
newmd <- merge(md,newmd,all.x=T,by.x="interval",by.y="interval")
head(newmd)
## Loading and preprocessing the data
md <- read.csv("repData/activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$rawdate <- strftime(md$date, format="%Y-%m-%d")
dateagg <- aggregate(steps~rawdate, md, FUN=sum)
hist(dateagg$steps)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
intagg <- aggregate(steps~interval, md, FUN=mean)
vsumna <- sum(is.na(md$steps))
names(intagg)[names(intagg)=="steps"]<- "averageByInterval"
newmd <- merge(md,intagg,all.x=T,by.x="interval",by.y="interval")
head(newmd)
nbrow(newmd)
nbrows(newmd)
str(md)
str(newmd)
newmd$imputed.steps <- ifelse(is.na(newmd$steps),newmd$averageByInterval,newmd$steps)
md$daytype <- as.factor(ifelse(weekdays(md$date)=="samedi"|weekdays(md$date)=="dimanche","weekends","weekdays"))
md$test <- weekdays(md$date)
g <- g+facet_grid(daytype ~ .)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
Load the data from file and preprocess it.
```{r}
md <- read.csv("activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$rawdate <- strftime(md$date, format="%Y-%m-%d")
md$daytype <- as.factor(ifelse(weekdays(md$date)=="samedi"|weekdays(md$date)=="dimanche","weekend","weekday"))
```
## What is mean total number of steps taken per day?
Calculate dayly totals of steps and the mean and the median of these values
```{r}
dateagg <- aggregate(steps~rawdate, md, FUN=sum)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
hist(dateagg$steps,main="Total number of steps taken each day",xlab="",ylab="")
```
The mean of the dayly total of steps is `r vmean`.
The median of the dayly total of steps is `r vmedian`.
## What is the average daily activity pattern?
Calculate the average number of steps taken per 5-minute interval, averaged across all days.
```{r}
intagg <- aggregate(steps~interval, md, FUN=mean)
vmax <- intagg[intagg$steps==max(intagg$steps),1]
plot(intagg$interval,intagg$steps, type="l", ylab="Averaged number of steps", xlab="5-minutes interval")
```
The interval with the average maximum number of steps is `r vmax`th interval.
## Imputing missing values
First, a new data set is created with the original data set and the average number of steps by interval.
A new variable "imputed.steps" is created that contains the value of steps when this one is not missing
and the average number of steps by interval when the value is missing.
```{r}
vsumna <- sum(is.na(md$steps))
names(intagg)[names(intagg)=="steps"]<- "averageByInterval"
newmd <- merge(md,intagg,all.x=T,by.x="interval",by.y="interval")
newmd$imputed.steps <- ifelse(is.na(newmd$steps), newmd$averageByInterval, newmd$steps)
dateagg2 <- aggregate(imputed.steps~rawdate, newmd, FUN=sum)
vmean2 <- mean(md$steps,na.rm=T)
vmedian2 <- median(md$steps,na.rm=T)
hist(dateagg2$imputed.steps,main="Total number of steps taken each day (imputed values)",xlab="",ylab="")
```
Number of missing values: `r vsumna`.
Mean number of steps (with imputed values): `r vmean2`.
Median number of steps (with imputed values): `r vmedian2`.
## Are there differences in activity patterns between weekdays and weekends?
```{r}
daytypeagg <- aggregate(imputed.steps~(interval*daytype), newmd, FUN=mean)
library(ggplot2)
g <- ggplot(daytypeagg,aes(interval,imputed.steps))
g <- g+geom_line()+ylab("Averaged number of steps")+xlab("Interval")
g+facet_grid(daytype ~ .)+ggtitle("Differences between weekdays and weekends")
```
```{r, echo=FALSE}
library(knitr)
knit2html()
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
Load the data from file and preprocess it.
```{r}
md <- read.csv("activity.csv",sep=",")
md$date <- strptime(md$date, format="%Y-%m-%d")
md$rawdate <- strftime(md$date, format="%Y-%m-%d")
md$daytype <- as.factor(ifelse(weekdays(md$date)=="samedi"|weekdays(md$date)=="dimanche","weekend","weekday"))
```
## What is mean total number of steps taken per day?
Calculate dayly totals of steps and the mean and the median of these values
```{r}
dateagg <- aggregate(steps~rawdate, md, FUN=sum)
vmean <- mean(md$steps,na.rm=T)
vmedian <- median(md$steps,na.rm=T)
hist(dateagg$steps,main="Total number of steps taken each day",xlab="",ylab="")
```
The mean of the dayly total of steps is `r vmean`.
The median of the dayly total of steps is `r vmedian`.
## What is the average daily activity pattern?
Calculate the average number of steps taken per 5-minute interval, averaged across all days.
```{r}
intagg <- aggregate(steps~interval, md, FUN=mean)
vmax <- intagg[intagg$steps==max(intagg$steps),1]
plot(intagg$interval,intagg$steps, type="l", ylab="Averaged number of steps", xlab="5-minutes interval")
```
The interval with the average maximum number of steps is `r vmax`th interval.
## Imputing missing values
First, a new data set is created with the original data set and the average number of steps by interval.
A new variable "imputed.steps" is created that contains the value of steps when this one is not missing
and the average number of steps by interval when the value is missing.
```{r}
vsumna <- sum(is.na(md$steps))
names(intagg)[names(intagg)=="steps"]<- "averageByInterval"
newmd <- merge(md,intagg,all.x=T,by.x="interval",by.y="interval")
newmd$imputed.steps <- ifelse(is.na(newmd$steps), newmd$averageByInterval, newmd$steps)
dateagg2 <- aggregate(imputed.steps~rawdate, newmd, FUN=sum)
vmean2 <- mean(md$steps,na.rm=T)
vmedian2 <- median(md$steps,na.rm=T)
hist(dateagg2$imputed.steps,main="Total number of steps taken each day (imputed values)",xlab="",ylab="")
```
Number of missing values: `r vsumna`.
Mean number of steps (with imputed values): `r vmean2`.
Median number of steps (with imputed values): `r vmedian2`.
## Are there differences in activity patterns between weekdays and weekends?
```{r}
daytypeagg <- aggregate(imputed.steps~(interval*daytype), newmd, FUN=mean)
library(ggplot2)
g <- ggplot(daytypeagg,aes(interval,imputed.steps))
g <- g+geom_line()+ylab("Averaged number of steps")+xlab("Interval")
g+facet_grid(daytype ~ .)+ggtitle("Differences between weekdays and weekends")
```
```{r, echo=FALSE}
library(knitr)
knit2html()
```
library(knitr)
ls
ls()
dir()
cd repdata
library(knitr)
knit2html("repData\RepData_PeerAssessment1\PA1_template.Rmd")
knit2html("repData\\RepData_PeerAssessment1\\PA1_template.Rmd")
knit2html("repData/RepData_PeerAssessment1/PA1_template.Rmd")
old <- getwd()
setwd("C:\Users\Brice\Desktop\Coursera\Data Science\r_wd\repData\RepData_PeerAssessment1")
setwd("C:\\Users\\Brice\\Desktop\\Coursera\\Data Science\\r_wd\\repData\\RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
render_html("PA1_template.Rmd")
