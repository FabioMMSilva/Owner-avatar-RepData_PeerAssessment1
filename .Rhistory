}
SAIDA_TEMP<-as.data.frame(cbind(latitude,longitude,nome,empresa,endereco,cidade,uf,cep="00000-0000",fone="(00)0000-0000",bairro="",empresa,motor,horario))
SAIDA<-rbind(SAIDA,SAIDA_TEMP[SAIDA_TEMP$latitude!='NA',])
print(paste0(nrow(SAIDA)," registros..."))
pag<-pag+1
temp<-grepl("por_rodape_prox.gif",xmlToList(html))
proximo<-temp[2]
if (is.na(proximo)) proximo<-FALSE
}
}
SAIDA<-data.frame(lapply(SAIDA[SAIDA$latitude!='NA',], as.character),stringsAsFactors = F)
write.csv(SAIDA,file=paste0('Lista_',empresa,'_',motor,"_",ESTADO,'.csv'),row.names = F)
################################################################################################################
mapa[mm]
html_temp<-getURL( mapa[mm]
#templates/resultado_busca.aspx?uf_busca=rs&orgm=8&atividade=',RAMO_pesquisa,'&nome=',empresa,'&endereco=&numero=0&telefone=&ddd=0&localidade=&cod_localidade=0&bairro=&cod_bairro=0&entrega=0&cartoes=0&estacionamento=0&manobrista=0&reserva=0&tiquetes=0&residencial=0&comercial=0&btnemail=0&btnsite=0&pchave=&letra=&pagina=',pag,'&pcount=25&randsort=-1',sep="")
, maxredirs = as.integer(20), followlocation = TRUE, curl = curl
, .encoding = 'UTF-8')
html_temp
html_temp<-htmlParse(html_temp,encoding = 'UTF-8')
html_temp
length(p)>0
latitude[mm]<-strsplit(p,";",fixed=T)[[1]][1]
longitude[mm]<-strsplit(p,";",fixed=T)[[1]][2]
latirude[mm]
latitude[mm]
#rua
e<-xpathSApply(html_temp,"//span[@class='street-address']",xmlValue)
e<-gsub("\r","",gsub("\t","",gsub("\n","",e)))
e<-gsub("\\s+", " ",e)
e<-trimws(e)
endereco[mm]<-gsub("(?<=\\b)([a-z])", "\\U\\1", tolower(e), perl=TRUE)
#cidade
e<-trimws(e)
e
e<-xpathSApply(html_temp,"//span[@class='street-address']",xmlValue)
e
mapa[mm]
e<-xpathSApply(html_temp,"//span[@property='streetAddress']",xmlValue)
e
e<-gsub("\r","",gsub("\t","",gsub("\n","",e)))
e<-gsub("\\s+", " ",e)
e<-trimws(e)
endereco[mm]<-gsub("(?<=\\b)([a-z])", "\\U\\1", tolower(e), perl=TRUE)
endereco[mm]
e<-xpathSApply(html_temp,"//span[@class='locality']",xmlValue)
e
e<-xpathSApply(html_temp,"//span[@property='addressLocality']",xmlValue)
e
e<-gsub("\r","",gsub("\t","",gsub("\n","",e)))
e<-gsub("\\s+", " ",e)
cidade[mm]<-trimws(e)
cidade[mm]
e<-xpathSApply(html_temp,"//span[@class='region']",xmlValue)
e
e<-xpathSApply(html_temp,"//span[@property='addressRegion']",xmlValue)
e
e<-gsub("\r"," ",gsub("\t"," ",gsub("\n"," ",e)))
e<-gsub("\\s+", " ",e)
uf[mm]<-trimws(e)
html
paste('http://www.telelistas.net/',ESTADO,'/cidade/',RAMO,'?pagina=',pag,'&randsort=-1',sep="")
xpathSApply(html,"//a[@title='Veja o mapa e saiba como chegar']",xmlGetAttr,'href')
nome
endereco<-xpathSApply(html,"//td[@class='text_endereco_ib']",xmlValue)
endereco
endereco<-gsub('CEP:','',endereco)
endereco<-gsub(' -',';',endereco)
endereco<-list()
endereco<-xpathSApply(html,"//td[@class='text_endereco_ib']",xmlValue)
endereco<-gsub('CEP:','',endereco)
endereco<-gsub(' -',';',endereco)
endereco
mapa<-xpathSApply(html,"//a[@title='Veja o mapa e saiba como chegar']",xmlValue)
mapa
mapa<-xpathSApply(html,"//a[@title='Veja o mapa e saiba como chegar']",xmlGetAttr,'href')
mapa
id<-xpathSApply(html,"//a[@property='reviewCount']",xmlGetAttr,'href')
id
split(id,'/')
strsplit(id,'/')
nome
id<-strsplit(id,'/')
id
length(id[25])
tail(id[25],-1)
tail(id[25],-2)
tail(id[[25]],-2)
tail(id[[25]],-1)
id[[25]]
tail(id[25],-1)
tail(id,-1)
tail(id)
tail(id[25])
tail(id[25],-1)
tail(id[25],-1)[1]
tail(id[25],-1)[2]
tail(id[25],-2)[2]
tail(id[25],-2)[1]
tail(id[[25]],-2)[1]
tail(id[[25]],-1)[1]
id[25]
tail(id[[25]],-1)
tail(id[[25]],-1)[]
tail(id[[25]],-1)[[]]
tail(id[[25]][1],-1)
id[[25[1]]]
id[[25]][1]
id[[25]][2]
id[[25]][5]
id[[25]][20]
length(id[[25]])
id[[25]][tail(id[[25]])]
id[[25]][length(id[[25]])]
id[[25]][length(id[[25]]-1)]
id[[25]][length(id[[25]])-1]
id[[]][length(id[[]])-1]
nome<-'Studio Hair'
end<-'Av. Presidente Vargas, 2100'
fone<-'(51)3459-9558'
municipio<-'Esteio'
uf<-'RS'
# APONTADOR
html<- htmlTreeParse(pasteo('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc=',municipio,'+',uf),useInternal=TRUE)
html<- htmlTreeParse(paste0('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc=',municipio,'+',uf),useInternal=TRUE)
html
loc<-paste0(municipio,'+',uf)
loc
loc<-paste0(municipio,'+',uf)
html<- htmlTreeParse(paste0('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc_z=',tolower(loc),'&loc=',loc,'&loc_y=',loc),useInternal=TRUE)
html
expathSApply(html,"//p[@class='poi name']",xmlValue)
xpathSApply(html,"//p[@class='poi name']",xmlValue)
paste0('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc_z=',tolower(loc),'&loc=',loc,'&loc_y=',loc
)
html<- htmlTreeParse(paste0('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc_z=',tolower(municipio),'%2C',tolower(uf),'&loc=',municipio,'%2C+',uf,'&loc_y=',municipio,'%2C+',uf),useInternal=TRUE)
html
xpathSApply(html,"//p[@class='poi name']",xmlValue)
paste0('http://www.apontador.com.br/local/search.html?q=',gsub(' ','+',nome),'&loc_z=',tolower(municipio),'%2C',tolower(uf),'&loc=',municipio,'%2C+',uf,'&loc_y=',municipio,'%2C+',uf)
xpathSApply(html,"//h1[class='content main-title'",xmlValue)
xpathSApply(html,"//h1[c@lass='content main-title'",xmlValue)
xpathSApply(html,"//h1[c@lass='content main-title']",xmlValue)
xpathSApply(html,"//h1[@class='content main-title']",xmlValue)
xpathSApply(html,"//h1[@class='content main-title']",xmlDoc)
xpathSApply(html,"//h1[@class='content main-title']",xmlParse)
xpathSApply(html,"//h1[@class='content main-title']",xmlParseDoc)
xpathSApply(html,"//h1[@class='content main-title']",xmlChildren)
xpathSApply(html,"//h1[@class='content main-title']",xml)
xpathSApply(html,"//h1[@class='content main-title']")
xpathApply(html,"//h1[@class='content main-title']")
xpathSApply(html,"//h1[@class='content main-title']",htmlParse)
xpathSApply(html,"//h1[@class='content main-title']",htmlTreeParse)
xpathSApply(html,"//h1[@class='content main-title']",xmlSource)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
setwd("C:/Users/Felipe/Documents/GitHub/RepData_PeerAssessment1")
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity<-read.csv("./activity.csv")
activity$datetime<-paste0("000",activity$interval)
activity$datetime<-(paste0(strptime(activity$date,format='%Y-%m-%d')," ",substr(activity$datetime ,nchar(activity$datetime)-3,nchar(activity$datetime)-2),":",substr(activity$datetime ,nchar(activity$datetime)-1,nchar(activity$datetime))))
activity
stepsbyday<-aggregate(activity$steps,by=list(activity$date),FUN=sum)
names(stepsbyday)<-c("date","steps")
stepsbyday$steps<-as.numeric(stepsbyday$steps)
qplot(data=stepsbyday) + geom_point(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
require(ggplot2)
qplot(data=stepsbyday) + geom_point(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_histogram(aes(date,steps),bins=500) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_histogram(aes(date~steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
e
qplot(data=stepsbyday) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_path(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_point(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
stepsbyday<-aggregate(activity$steps,by=list(activity$date),FUN=sum,na.rm=T)
names(stepsbyday)<-c("date","steps")
stepsbyday$steps<-as.numeric(stepsbyday$steps)
qplot(data=stepsbyday) + geom_point(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_bar(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_bar(aes(date,steps),binwidth = 1000) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday) + geom_histogram(aes(date,steps),binwidth = 1000) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 1000) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 1000) + geom_histogram(aes(stepsbyday$date,stepsbyday$steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
hist(stepsbyday)
hist(stepsbyday$steps)
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(stepsbyday$date,stepsbyday$steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(steps,date)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(steps,date)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(steps,date) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(date,steps) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(stepsbyday$date,stepsbyday$steps) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(stepsbyday$steps,stepsbyday$date) + theme(axis.text.x = element_text(angle=90, hjust=1))
str(stepsbyday)
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(stepsbyday$steps,as.character(stepsbyday$date)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(stepsbyday$steps) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(stepsbyday$steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(date)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(date,steps)) + theme(axis.text.x = element_text(angle=90, hjust=1))
qplot(data=stepsbyday,binwidth = 500) + geom_histogram(aes(steps,date)) + theme(axis.text.x = element_text(angle=90, hjust=1))
head(stepsbyday)
stepsbyday<-aggregate(steps~date,activity,FUN=sum,na.rm=T)
head(stepsbyday)
str(stepsbyday)
activity<-read.csv("./activity.csv")
activity$datetime<-paste0("000",activity$interval)
activity$datetime<-(paste0(strptime(activity$date,format='%Y-%m-%d')," ",substr(activity$datetime ,nchar(activity$datetime)-3,nchar(activity$datetime)-2),":",substr(activity$datetime ,nchar(activity$datetime)-1,nchar(activity$datetime))))
stepsbyday<-aggregate(steps~date,activity,FUN=sum,na.rm=T)
psbyday<-aggregate(steps~date,activity,FUN=sum,na.rm=T)
stepsbyday$steps<-as.numeric(stepsbyday$steps)
stepsbyday<-aggregate(steps~date,activity,FUN=sum,na.rm=T)
head(stepsbyday
)
qplot(stepsbyday)
qplot(stepsbyday$steps)
hist(stepsbyday$steps)
qplot(stepsbyday$steps)
qplot(stepsbyday$steps,binwidth=2000)
qplot(stepsbyday$steps,binwidth=2500)
qplot(stepsbyday$steps,binwidth=2500)
qplot(stepsbyday$steps,binwidth=5000)
qplot(stepsbyday$steps,binwidth=2500)
qplot(stepsbyday$steps,binwidth=2500,col='green')
qplot(stepsbyday$steps,binwidth=2500,colour='green')
hist(stepsbyday$steps,binwidth=2500,col='green')
hist(stepsbyday$steps,col='green')
rhist(stepsbyday$steps,col='green')
hist(stepsbyday$steps,col='green')
stepsbyday<-aggregate(steps~date,activity,FUN=sum,na.rm=T)
hist(stepsbyday$steps,col='green')
hist(stepsbyday$steps,col='green',by=1000)
hist(stepsbyday$steps,col='green',break=1000)
hist(stepsbyday$steps,col='green',break=1000)
hist(stepsbyday$steps, col='green', xlab='Total steps' main='histogram of the total number of steps taken each day')
hist(stepsbyday$steps, col='green', xlab='Total steps', main='histogram of the total number of steps taken each day')
hist(stepsbyday$steps, col='darkgreen', xlab='Total steps', main='histogram of the total number of steps taken each day')
act_mean<-mean(stepsbyday$steps)
act_median<-median(stepsbyday$steps)
act_mean
stepsbyday<-aggregate(steps~date,activity,FUN=sum)
# plot the histogram
hist(stepsbyday$steps, col='darkgreen', xlab='Total steps', main='histogram of the total number of steps taken each day')
act_mean<-mean(stepsbyday$steps)
act_mean
act_median<-median(stepsbyday$steps)
act_median
nrow(activity)
options("scipen" = 10)
stepsbyinterval<-aggregate(steps~interval,activity,sum)
stepsbyday<-aggregate(steps~date,activity,sum)
stepsbyinterval<-aggregate(steps~interval,activity,sum)
head(stepsbyinterval)
qplot(stepsbyinterval)
qplot(stepsbyinterval$steps)
plot(stepsbyinterval$steps, type='l')
plot(stepsbyinterval$interval,stepsbyinterval$steps, type='l')
stepsbyinterval<-aggregate(steps~interval,activity,mean)
plot(stepsbyinterval$interval,stepsbyinterval$steps, type='l')
plot(stepsbyinterval$interval,stepsbyinterval$steps, type='l',col=1)
plot(stepsbyinterval$interval,stepsbyinterval$steps, type='l',col='darkgreen')
plot(stepsbyinterval$interval,stepsbyinterval$steps, type='l',ylab='Average steps',xlab='5-minute interval',main='Average steps by 5-minute interval')
stepsbyinterval$interval
max(stepsbyinterval$interval)
stepsbyinterval[max(stepsbyinterval$interval),]
stepsbyinterval[which(max(stepsbyinterval$interval)),]
stepsbyinterval[which(max(stepsbyinterval$interval))]
stepsbyinterval[which.max(stepsbyinterval$interval)),]
stepsbyinterval[which.max(stepsbyinterval$interval),]
stepsbyinterval[which.max(stepsbyinterval$steps),]
a<-stepsbyinterval[which.max(stepsbyinterval$steps),]
a$interval
!complete.cases(activity)
activity[!complete.cases(activity),]
nrow(activity)
nrow(activity[!complete.cases(activity),])
activity[!complete.cases(activity),]
weekdays(activity$date)
weekdays(strptime(activity$date,format='%Y-%m-%d'))
Sys.setlocale("LC_TIME","English United States")
weekdays(strptime(activity$date,format='%Y-%m-%d'))
Sys.setlocale("LC_TIME", "en_US")
Sys.setlocale("LC_TIME", "en_US")
Sys.setlocale("LC_TIME", "English")
weekdays(strptime(activity$date,format='%Y-%m-%d'))
Sys.setlocale("LC_TIME","English")
activity$weekday<-weekdays(strptime(activity$date,format='%Y-%m-%d'))
tail(activity)
head(activity)
activity
NArows[1]
NArows
NArows<-activity[!complete.cases(activity),]
NArows[1]
NArows[,1]
NArows[1,]
NArows[2,]
activity_filled<-activity
activity_filled$weekday<-weekdays(strptime(activity_filled$date,format='%Y-%m-%d'))
activity_filled
NArows
stepsbyinterval
NArows
NArows[1,]
NArows[2,]
n=1
is.na(activity_filled$steps[n])
stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval)]
activity_filled$interval[n]
activity_filled$steps[n]
stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
activity_filled$steps[n]
activity_filled
head(activity_filled)
activity_filled<-activity
#
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
head(activity_filled)
tail(activity_filled)
mean(activity$steps)
mean(activity$steps,na.rm=T)
mean(activity_filled)
mean(activity_filled,na.rm=T)
mean(activity_filled$steps)
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
mean(activity_filled$steps)
mean(activity$steps)
mean(activity$steps,na.rm=TRUE)
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-1#stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
mean(activity$steps)
mean(activity$steps,na.rm=TRUE)
mean(activity_filled$steps)
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-10000#stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
mean(activity_filled$steps)
n
activity_filled$steps[n]
activity_filled<-activity
# loop all rows and fill the ones with NAs
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-10000#stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
mean(activity_filled$steps)
stepsbyinterval
activity_filled$interval[n]
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
activity_filled$steps[n]
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
activity_filled$steps[n]
mean(activity$steps)
mean(activity$steps,na.rm=T)
activity_filled<-activity
# loop all rows and fill the ones with NAs
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-37.3826#stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
mean(activity_filled$steps)
head(activity_filled)
activity_filled
tail(activity_filled)
mean(activity_filled$steps)
# clone activity dataset to activity_filled
activity_filled<-activity
head(activity_filled)
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
head(activity_filled)
head(stepsbyinterval)
stepsbyday_filled<-aggregate(steps~date,activity_filled,sum,na.rm=TRUE)
# plot the histogram
hist(stepsbyday_filled$steps, col='darkgreen', xlab='Total steps', main='histogram of the total number of steps taken each day')
# calculate mean
act_mean<-mean(stepsbyday_filled$steps)
# calculate median
act_median<-median(stepsbyday_filled$steps)
stepsbyinterval
activity_filled
activity_filled$weekday=='Saturday'|activity_filled$weekday=='Sunday'
activity[activity_filled$weekday=='Saturday' & activity_filled$weekday=='Sunday','weekday']
activity[activity_filled$weekday=='Saturday' & activity_filled$weekday=='Sunday',]
activity_filled[activity_filled$weekday=='Saturday' & activity_filled$weekday=='Sunday',]
activity_filled[activity_filled$weekday=='Saturday' & activity_filled$weekday=='Sunday',]
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]$weekday
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]$weekday<-'weekend'
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]$weekday
activity_filled[!activity_filled$weekday=='weekend']$weekday<-'weekday'
activity_filled$weekday<-weekdays(strptime(activity_filled$date,format='%Y-%m-%d'))
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]$weekday<-'weekend'
activity_filled[!activity_filled$weekday=='weekend']$weekday<-'weekday'
activity_filled[activity_filled$weekday!='weekend']$weekday<-'weekday'
activity_filled$weekday<-weekdays(strptime(activity_filled$date,format='%Y-%m-%d'))
activity_filled[activity_filled$weekday=='Saturday' | activity_filled$weekday=='Sunday',]$weekday<-'weekend'
activity_filled[activity_filled$weekday!='weekend',]$weekday<-'weekday'
activity_filled
stepsbyweekday<-aggregate(steps~stepsbyinterval+weekdays,activity_filled,average)
stepsbyweekday<-aggregate(steps~stepsbyinterval+weekdays,activity_filled,mean)
str(activity_filled)
stepsbyweekday<-aggregate(steps~interval+weekdays,activity_filled,mean)
stepsbyweekday<-aggregate(steps~interval+weekday,activity_filled,mean)
stepsbyweekday
head(stepsbyweekday)
activity_filled$period<-weekdays(strptime(activity_filled$date,format='%Y-%m-%d'))
activity_filled[activity_filled$period=='Saturday' | activity_filled$period=='Sunday',]$period<-'weekend'
activity_filled[activity_filled$period!='weekend',]$period<-'weekday'
stepsbyweekday<-aggregate(steps~interval+period,activity_filled,mean)
head(stepsbyday)
head(stepsbyweekday)
ggplot(data=stepsbyweekday) + geom_line(aes(col=period))
ggplot(data=stepsbyweekday) + geom_line(steps,aes(col=period))
ggplot(data=stepsbyweekday) + geom_line(aes(steps,col=period))
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period))
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period),group=period)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period,group=period))
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period) +
facet_grid(period)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period)) +
facet_grid(period)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period)) +
facet_grid(period)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period)) +
facet_grid(stepsbyweekday$period)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period)) +
facet_grid(stepsbyweekday$period ~.)
ggplot(data=stepsbyweekday) + geom_line(aes(steps,interval,col=period)) +
facet_grid(period ~.)
head(activity_filled)
head(activity_filled,1000)
rm(activity_filled)
activity_filled<-activity
# loop all rows and fill the ones with NAs
for (n in 1:nrow(activity_filled)){
if(is.na(activity_filled$steps[n])){
activity_filled$steps[n]<-stepsbyinterval[which(activity_filled$interval[n]==stepsbyinterval$interval),'steps']
}
}
stepsbyday_filled<-aggregate(steps~date,activity_filled,sum,na.rm=TRUE)
day_filled<-aggregate(steps~date,activity_filled,sum,na.rm=TRUE)
day_filled<-aggregate(steps~date,activity_filled,sum,na.rm=TRUE)
stepsbyday_filled<-aggregate(steps~date,activity_filled,sum,na.rm=TRUE)
# plot the histogram
hist(stepsbyday_filled$steps, col='darkgreen', xlab='Total steps', main='histogram of the total number of steps taken each day')
# calculate mean
act_mean<-mean(stepsbyday_filled$steps)
# calculate median
act_median<-median(stepsbyday_filled$steps)
activity_filled$period<-weekdays(strptime(activity_filled$date,format='%Y-%m-%d'))
activity_filled[activity_filled$period=='Saturday' | activity_filled$period=='Sunday',]$period<-'weekend'
activity_filled[activity_filled$period!='weekend',]$period<-'weekday'
rm(stepsbyweekday)
activity_filled[activity_filled$interval==0,"steps"]
activity_filled[activity_filled$interval==0,c("steps","period")]
activity_filled[activity_filled$interval==0,c("steps")]
activity[activity$interval==0,c("steps")]
stepsbyperiod<-aggregate(steps~interval+period,activity_filled,mean)
head(stepsbyperiod)
head(stepsbyperiod,500)
ggplot(data=stepsbyperiod) + geom_line(aes(steps,interval,col=period)) +
facet_grid(period ~.)
ggplot(data=stepsbyperiod) + geom_line(aes(interval,steps,col=period)) +
facet_grid(period ~.)
ggplot(data=stepsbyperiod) + geom_line(aes(interval,steps,col=period)) +
facet_grid(period ~ ., scales="fixed", space="fixed")
ggplot(data=stepsbyperiod) + geom_line(aes(interval,steps,col=period)) +
facet_grid(period ~ ., scales="fixed", space="fixed") + labs(y='Average number of steps')
ggplot(data=stepsbyperiod) + geom_line(aes(interval,steps,col=period)) +
facet_grid(period ~ ., scales="fixed", space="fixed") + labs(y='Average number of steps', title='aaa')
ggplot(data=stepsbyperiod) + geom_line(aes(interval,steps,col=period)) +
facet_grid(period ~ ., scales="fixed", space="fixed") + labs(y="Average number of steps", title="Average number of steps by 5-minute period on weekends and weekdays")
mean(stepsbyperiod[stepsbyperiod$period=='weekend'],'steps')
mean(stepsbyperiod[stepsbyperiod$period=='weekend','steps'])
mean(stepsbyperiod[stepsbyperiod$period=='weekday','steps'])
max(stepsbyperiod[stepsbyperiod$period=='weekend','steps'])
max(stepsbyperiod[stepsbyperiod$period=='weekday','steps'])
int<-stepsbyinterval[which.max(stepsbyinterval$steps),]
int
knit2html()
install.packages("knitr")
library(knitr)
knit2html()
knit2html('PA1_template.Rmd')
