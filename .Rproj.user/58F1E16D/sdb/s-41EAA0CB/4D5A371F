{
    "contents" : "---\noutput:\n  html_document:\n    fig_caption: yes\n    keep_md: yes\n    toc: yes\n\n\n```{r, echo=TRUE}\nsetwd(\"~/GitHub/RRAssig1\")\nAct <- read.csv(\"~/GitHub/RRAssig1/activity.csv\")\n\n#Transformations\nAct$steps <- as.numeric(Act$steps)\nAct$date<-as.Date(Act$date, format= \"%Y-%m-%d\")\n\n#Remove NA\nAct2<-na.omit(Act)\n\n#What is mean total number of steps taken per day?\n\nSteps<-aggregate(Act2$steps, list(Act2$date), sum)\nmean(Steps$x) # The mean total number of steps taken per day is 10,766.19\n\n\n# 1. Calculate the total number of steps taken per day \n\nSteps\n\n# 2. Make a histogram of the total number of steps taken each day\n\nlibrary (ggplot2)\nggplot(data=Steps,aes(Group.1,x))+geom_histogram(stat=\"identity\", fill=\"blue\", colour=\"black\")+\n        xlab(\"Date\")+ylab(\"Steps per day\")+\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n#3. Calculate and report the mean and median of the total number of steps taken per day\nlibrary(plyr)\nSteps2<- ddply(Act, \"date\", summarise, mean = mean (steps), median = median(steps))\nSteps2\n\n\n#What is the average daily activity pattern?\n\n# 1. Make a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) \n# and the average number of steps taken, averaged across all days (y-axis)\n\nSteps3<- ddply(Act2, \"interval\", summarise, mean = mean(steps))\n\nggplot(Steps3, aes(interval, mean)) + geom_line() +\n        xlab(\"Interval\") + ylab(\"Average number of steps averaged across all days\")+\n        scale_x_continuous()\n\n\n# 2. Which 5-minute interval, on average across all the days in the dataset, \n#contains the maximum number of steps?\n\nlibrary(plyr)\narrange(Steps3, desc(mean)) ## The maximum number of steps is found on interval 835 which in average had 206.17 steps\n\n## Imputing missing values\n\n#  1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)\n\nsummary(Act)        ## The number of missing values in the dataset is 2304\n\n\n# 2. Devise a strategy for filling in all of the missing values in the dataset. \n#The strategy does not need to be sophisticated. For example, you could use \n#the mean/median for that day, or the mean for that 5-minute interval, etc.\n\nimpute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE)) #replace NA with mean function\n\ndat2 <- ddply(Act, ~ interval, transform, steps = impute.mean(steps)) # Replaces NA with the mean of each interval\n\n\n# 3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\ndat3<-arrange(dat2, date, interval, steps) # reorder to have new datase equal as the original\n\n\n# 4. Make a histogram of the total number of steps taken each day \n\nSteps4<-aggregate(dat3$steps, list(dat3$date), sum)\nSteps4\n\nggplot(data=Steps4,aes(Group.1,x))+geom_histogram(stat=\"identity\", fill=\"red\", colour=\"black\")+\n        xlab(\"Date\")+ylab(\"Steps per day\")+\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n# Calculate and report the mean and median total number of steps taken per day. \n\nSteps5<- ddply(dat3, \"date\", summarise, mean = mean (steps), median = median(steps))\nSteps5\n\n#Do these values differ from the estimates from the first part of the assignment?  #Yes the values differ as shown in chart\n\nSteps6<- merge(x = Steps2, y = Steps5, by = \"date\", all = TRUE) # join the two datasets\nstr(Steps6)\n\nlibrary(reshape2) # for melt()\nmelt_Steps6 <- melt(Steps6)\nhead(melt_Steps6) # so you can see it\n\nggplot(data=melt_Steps6,aes(date,value))+geom_histogram(stat=\"identity\")+facet_grid(variable~.)+\n        xlab(\"Date\")+ylab(\"Mean and median of steps per day (x = original, y = replaced NA\")+\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n#What is the impact of imputing missing data on the estimates of the total daily number of steps? \n\n# the number of steps per day increases in some days and there are less emply spaces on the dates\n\nSteps7<- merge(x = Steps, y = Steps4, by = \"Group.1\", all = TRUE) \nstr(Steps7)\nmelt_Steps7 <- melt(Steps7)\n\nggplot(data=melt_Steps7,aes(Group.1,value))+geom_histogram(stat=\"identity\")+facet_grid(variable~.)+\n        xlab(\"Date\")+ylab(\"Total steps per day\")+\n        theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n##Are there differences in activity patterns between weekdays and weekends?\n\n# 1. Create a new factor variable in the dataset with two levels - \"weekday\" and \"weekend\" indicating whether a given date is a weekday or weekend day.\n\nAct$day <- weekdays(as.Date(Act$date))\n\nlibrary(timeDate)\n\ndat3$day <- weekdays(as.Date(dat3$date)) #include the day of the week\ndat3$IsWeekday<-isWeekday(dat3$date, wday=1:5) # True = weekday, False = weekend\n\ndataPlot3<-aggregate(dat3[, 1], list(dat3$IsWeekday, dat3$interval), mean) # mean for each interval on weekday and weekend\n\nstr(dataPlot3)\n\n#  Make a panel plot containing a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) \n#and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). \n#See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.\n\n#To change the facet label name\n\nmf_labeller <- function(var, value){\n        value <- as.character(value)\n        if (var==\"Group.1\") { \n                value[value==\"TRUE\"] <- \"Weekday\"\n                value[value==\"FALSE\"]   <- \"Weekend\"\n        }\n        return(value)\n}\n\n# time series plot of the average number of steps per interval across all weekday days and weekend days\n\nggplot(dataPlot3, aes(Group.2, x)) + geom_line() +facet_grid(Group.1~., labeller=mf_labeller)+\n        xlab(\"Interval\") + ylab(\"Average number of steps averaged across all days\")\n\n\n",
    "created" : 1452622502427.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2791224954",
    "id" : "4D5A371F",
    "lastKnownWriteTime" : 1452625071,
    "path" : "~/GitHub/RRAssig1/prueba.Rmd",
    "project_path" : "prueba.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}