# First we load the required libraries
library(knitr)
library(data.table)
library(ggplot2)
# For code chunks to be readable and reproducible we set echo equal to TRUE
opts_chunk$set(echo = TRUE)
# We load the already unzipped csv in a data frame
df <- read.csv("activity.csv", as.is=TRUE)
# We generate df2 omitting NAs
df2 <- na.omit(df)
# Then we aggregate steps per date
stepsdate <- aggregate(steps ~ date, df2, sum)
# We create an histogram of total number steps per day
hist(stepsdate$steps, col=1, main="Total number of steps per day", xlab="Steps per day")
# We let the pc calculate the mean of total number of steps per day
mean(stepsdate$steps)
# We let the pc calculate the median of total number of steps per day
median(stepsdate$steps)
stepsinterval <- aggregate(steps ~ interval, df2, mean)
# We create the plot with the average number of steps taken and the 5 minute intervals
colnames(stepsinterval) <- c("interval", "steps")
ggplot(stepsinterval, aes(x=interval, y=steps)) +
geom_line(color="gray", size=1) +
labs(title="Average Daily Activity", x="Interval", y="Number of Steps") +
theme_bw()
# Then we calculate the 5 minute interval and the maximum number of steps
maxstepsinterval <- stepsinterval[which.max(stepsinterval$steps),]
maxstepsinterval
# We now want to get rows with NAs
df_NA <- df[!complete.cases(df),]
nrow(df_NA)
# Then we want to fill NAs values with the mean value at the same interval
for (i in 1:nrow(df)){
if (is.na(df$steps[i])){
interval_val <- df$interval[i]
row_id <- which(stepsinterval$interval == interval_val)
steps_val <- stepsinterval$steps[row_id]
df$steps[i] <- steps_val
}
}
# We aggregate steps per date and get the number of steps in a day
newstepsdate <- aggregate(steps ~ date, df, sum)
# We create an histogram with the number of steps in a day
hist(newstepsdate$steps, col=1, main="Total number of steps per day", xlab="Number of steps per day")
savehistory("~/Desktop/Data/JHU/Reproducible/RepData_PeerAssessment1/RepData_PeerAssessment1.Rhistory")
